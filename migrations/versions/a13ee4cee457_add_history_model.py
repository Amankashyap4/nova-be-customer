"""add_history_model

Revision ID: a13ee4cee457
Revises: 91c1b3d451ff
Create Date: 2022-08-09 13:56:13.830123

"""
import sqlalchemy as sa
from alembic import op

import app

# revision identifiers, used by Alembic.
revision = "a13ee4cee457"
down_revision = "91c1b3d451ff"
branch_labels = None
depends_on = None

create_trigger = """
    CREATE TRIGGER customer_history BEFORE UPDATE OF phone_number, email ON customers
    FOR EACH ROW EXECUTE PROCEDURE customer_history();
"""
drop_trigger = """
    DROP TRIGGER customer_history ON customers;
"""
trigger_function = """
 CREATE OR REPLACE FUNCTION customer_history() RETURNS TRIGGER AS $customer_history$
    DECLARE
        action VARCHAR(15);
    BEGIN
        IF (OLD.phone_number = NEW.phone_number) THEN
            action := 'email_update';
        ELSE
            action := 'phone_update';
        END IF;
        INSERT INTO customers_history
        (id, customer_id, phone_number, email, action, valid_from, valid_to)
        VALUES(gen_random_uuid(), OLD.id, OLD.phone_number, OLD.email, action,
        OLD.modified, now());
        RETURN NEW;
    END;
$customer_history$ LANGUAGE plpgsql;
"""
drop_function = """
    DROP FUNCTION customer_history CASCADE
"""


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customers_history",
        sa.Column("id", app.utils.guid.GUID(), nullable=False),
        sa.Column("customer_id", app.utils.guid.GUID(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=True),
        sa.Column("action", sa.String(length=60), nullable=False),
        sa.Column("valid_from", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "valid_to",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_customers_history_customer_id"),
        "customers_history",
        ["customer_id"],
        unique=False,
    )
    op.execute(trigger_function)
    op.execute(create_trigger)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_customers_history_customer_id"), table_name="customers_history"
    )
    op.drop_table("customers_history")
    op.execute(drop_trigger)
    # ### end Alembic commands ###
