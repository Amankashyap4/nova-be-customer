version: "3.3"
services:
  backend:
#    image: "joeymaclean/nova-be-customer"
    build:
     context: .
     dockerfile: Dockerfile
    environment:
      DB_ENGINE: ${DB_ENGINE}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DEV_DB_HOST: ${DEV_DB_HOST}
      TEST_DB_HOST: ${TEST_DB_HOST}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      FLASK_ENV: ${FLASK_ENV}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_URI: ${KEYCLOAK_URI}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KEYCLOAK_CUSTOMER_ROLE_ID: ${KEYCLOAK_CUSTOMER_ROLE_ID}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_SERVER: ${REDIS_SERVER}
      SMS_CLIENT_ID: ${SMS_CLIENT_ID}
      SMS_CLIENT_SECRET: ${SMS_CLIENT_SECRET}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
    command: "./gunicorn_starter.sh"
    ports:
      - 8000:5000
    volumes:
      - .:/app_dir
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - keycloak
      - kafka
    networks:
      - customer_service
#  queue:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: 'python -u /app/consumer.py'
#    restart: always
#    depends_on:
#      - db
  redis:
    image: 'redis:4-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_REPLICATION_MODE=master
    ports:
      - '6379:6379'
    networks:
      - customer_service

  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - .dbdata:/var/lib/postgres
    ports:
      - 5432:5432
    networks:
      - customer_service

  keycloak_db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: ${KEYCLOAK_DATABASE_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    volumes:
      - .postgres:/var/lib/postgresql/data
    ports:
      - 54280:5434
    networks:
      - customer_service

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - keycloak_db
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak_db
      DB_DATABASE: ${KEYCLOAK_DATABASE_NAME}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      DB_SCHEMA: public
#      KEYCLOAK_USER: ${KEYCLOAK_ADMIN_USER}
#      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    networks:
        - customer_service

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - customer_service

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
        - zookeeper
    networks:
        - customer_service

networks:
  customer_service:
    driver: bridge
